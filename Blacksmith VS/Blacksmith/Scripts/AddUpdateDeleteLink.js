// Generated by IcedCoffeeScript 108.0.9
(function() {
  var convertDate, convertDates, displayInserted, rememberInitialValues;

  $(function() {
    convertDates();
    setInterval(convertDates, 59000);
    return rememberInitialValues();
  });

  convertDates = function() {
    var elem, _i, _len, _ref, _results;
    _ref = $(".date.difference");
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      elem = _ref[_i];
      _results.push(convertDate($(elem)));
    }
    return _results;
  };

  convertDate = function($elem) {
    var date, distance;
    date = $elem.attr("abs-date");
    distance = moment(date, "DD-MMM-YY HH:mm:ss").fromNow();
    if (distance !== "Invalid date") {
      return $elem.text(distance);
    }
  };

  rememberInitialValues = function() {
    var $elem, elem, value, _i, _len, _ref, _results;
    _ref = $("[contenteditable]");
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      elem = _ref[_i];
      $elem = $(elem);
      value = $elem.text().trim();
      $elem.data("original", value);
      _results.push($elem.data("db-cache", value));
    }
    return _results;
  };

  this.focused;

  this.registerFocus = function(id, type) {
    return this.focused = {
      id: id,
      type: type
    };
  };

  this.updateFocused = function() {
    var content, date, elem, f, field, formattedDate, id, indicator, lastContent, type;
    id = this.focused.id;
    type = this.focused.type;
    if (type !== "title" && type !== "address" && type !== "description") {
      console.error("Invalid focused type: " + type);
      return;
    }
    elem = $("[db-id='" + id + "']");
    field = elem.find("." + type);
    content = field.text().trim();
    indicator = elem.find('.working-indicator');
    lastContent = field.data("last-content");
    if (content === field.data("db-cache")) {
      if (!!field.data("update-timeout")) {
        clearTimeout(field.data("update-timeout"));
      }
      indicator.css("visibility", "hidden");
      return;
    }
    if ((lastContent != null) && lastContent === content) {
      return;
    }
    field.data("last-content", content);
    if (type === "address") {
      elem.find(".favicon").attr("src", "http://www.google.com/s2/favicons?domain_url=" + content);
      elem.find(".visit-link").attr("title", "Visit " + content).attr("href", "" + (prependHttp(content)));
    }
    indicator.css("visibility", "visible");
    date = elem.find(".date.difference");
    formattedDate = moment().format("DD-MMM-YY HH:mm:ss");
    date.attr("abs-date", formattedDate).attr("title", "Date updated: " + formattedDate);
    if (!!field.data("update-timeout")) {
      clearTimeout(field.data("update-timeout"));
    }
    f = function() {
      return updateDB(type, content, id, indicator, date, field);
    };
    return field.data("update-timeout", setTimeout(f, 2000));
  };

  this.prependHttp = function(link) {
    var start, toPrepend;
    toPrepend = "http://";
    start = link.slice(0, toPrepend.length);
    if (start !== toPrepend) {
      return toPrepend + link;
    }
    return link;
  };

  this.updateDB = function(type, value, id, indicator, date, field) {
    console.log("updatin " + type + " to " + value + " for id " + id);
    return $.ajax({
      url: "Manage?Action=Update&field=" + type + "&value=" + value + "&id=" + id
    }).done(function() {
      field.data("db-cache", value);
      indicator.css("visibility", "hidden");
      convertDate(date);
      return console.log("done updating!");
    });
  };

  this.sendInsert = function() {
    var address, description, form, title;
    form = $("#creation");
    title = form.find(".title").text().trim();
    address = form.find(".address").text().trim();
    description = form.find(".description").text().trim();
    return displayInserted(title, address, description);
  };

  displayInserted = function(title, address, description) {
    var clonable, displayed;
    console.log("test " + title);
    clonable = $("#clonable.big-link");
    return displayed = clonable.clone().css("display", "visible").attr("id", "").insertAfter(clonable);
  };

  this.sendDelete = function(id) {
    return $.ajax({
      url: "Manage?Action=Delete&id=" + id
    }).done(function() {
      $("[db-id='" + id + "']").slideUp();
      return console.log("done deleting!");
    });
  };

}).call(this);

//# sourceMappingURL=AddUpdateDeleteLink.js.map
