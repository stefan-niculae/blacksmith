// Generated by IcedCoffeeScript 108.0.9
(function() {
  var prepareArticle, rememberInitialValue;

  $(function() {
    var article, _i, _len, _ref;
    _ref = $("#submitted article");
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      article = _ref[_i];
      prepareArticle($(article));
    }
    return setInterval(convertDates, 59000);
  });

  prepareArticle = function(article) {
    var editable, _i, _len, _ref, _results;
    convertDate(article.find(".date.difference"));
    _ref = article.find("[allows-edit], .category[contenteditable]");
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      editable = _ref[_i];
      _results.push(rememberInitialValue($(editable)));
    }
    return _results;
  };

  rememberInitialValue = function($elem) {
    var value;
    value = $elem.text().trim();
    $elem.data("original", value);
    return $elem.data("db-cache", value);
  };

  this.focused;

  this.registerFocus = function(id, type) {
    return this.focused = {
      id: id,
      type: type
    };
  };

  this.updateFocused = function() {
    var content, date, elem, f, field, formattedDate, id, indicator, lastContent, type;
    id = this.focused.id;
    type = this.focused.type;
    if (type !== "title" && type !== "address" && type !== "description" && type !== "category") {
      console.error("Invalid focused type: " + type);
      return;
    }
    elem = $("[db-id='" + id + "']");
    field = type !== "category" ? elem.find("." + type) : $(".category");
    content = field.text().trim();
    indicator = elem.find('.working-indicator');
    lastContent = field.data("last-content");
    if (content === field.data("db-cache")) {
      if (!!field.data("update-timeout")) {
        clearTimeout(field.data("update-timeout"));
      }
      indicator.css("visibility", "hidden");
      return;
    }
    if ((lastContent != null) && lastContent === content) {
      return;
    }
    field.data("last-content", content);
    if (type === "address") {
      elem.find(".favicon").attr("src", "http://www.google.com/s2/favicons?domain_url=" + content);
      elem.find(".address a").attr("href", "" + (prependHttp(content)));
    }
    indicator.css("visibility", "visible");
    if (type !== "category") {
      date = elem.find(".date.difference");
      formattedDate = moment().format("DD-MMM-YY HH:mm:ss");
      date.attr("abs-date", formattedDate).attr("title", "Date updated: " + formattedDate);
    }
    if (!!field.data("update-timeout")) {
      clearTimeout(field.data("update-timeout"));
    }
    f = function() {
      return updateDB(type, content, id, indicator, date, field);
    };
    return field.data("update-timeout", setTimeout(f, 1000));
  };

  this.prependHttp = function(link) {
    var start, toPrepend;
    toPrepend = "http://";
    start = link.slice(0, toPrepend.length);
    if (start !== toPrepend) {
      return toPrepend + link;
    }
    return link;
  };

  this.updateDB = function(type, value, id, indicator, date, field) {
    return $.ajax({
      url: "" + window.location.href + "&Action=Update&field=" + type + "&value=" + value + "&id=" + id
    }).done(function() {
      field.data("db-cache", value);
      indicator.css("visibility", "hidden");
      if (type !== "category") {
        convertDate(date);
      }
      return console.log("done updating! " + type + " to " + value);
    });
  };

  this.sendDelete = function() {
    var article, id;
    article = $(event.currentTarget).parent("article");
    id = article.attr("db-id");
    return $.ajax({
      url: "" + window.location.href + "&Action=Delete&id=" + id
    }).done(function() {
      article.slideUp();
      return console.log("done deleting!");
    });
  };

  this.toggleEditable = function() {
    var article, editable, notEditable;
    article = $(event.currentTarget).parent("article");
    editable = article.find("[allows-edit][contenteditable]");
    notEditable = article.find("[allows-edit]:not([contenteditable])");
    editable.removeAttr("contenteditable");
    return notEditable.attr("contenteditable", "");
  };

}).call(this);

//# sourceMappingURL=UpdateDeleteLink.js.map
